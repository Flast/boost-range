[/
    Copyright 2011 Akira Takahashi
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section filtered]

By including this header, regular operator can be applied to `filtered` adaptor of Boost Range Library.

[table
    [[Syntax] [Code]]
    [[regular operator] [`rng |+ boost::adaptors::filtered(pred)`]]
]

[heading Header]
``
#include <boost/range/adaptor/regular_extension/filtered.hpp>
``

[heading Associative Header]
``
#include <boost/range/adaptor/filtered.hpp>
#include <boost/range/regular.hpp>
``

[heading Example]

``
#include <boost/range/adaptor/regular_extension/filtered.hpp>
#include <boost/range/algorithm/for_each.hpp>
#include <boost/lambda/lambda.hpp>
#include <boost/assign/list_of.hpp>
#include <iostream>
#include <vector>

void disp(int x)
{
    std::cout << x << std::endl;
}

using boost::lambda::_1;
using namespace boost::adaptors;

int main()
{
    const std::vector<int> v = boost::assign::list_of(1)(2)(3)(4)(5);

    boost::for_each(v |+ filtered(_1 % 2 == 0), disp);
}
``

This would produce the output:
``
2
4

``
[endsect]

