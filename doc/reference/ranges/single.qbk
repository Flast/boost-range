[/
    Copyright 2011 Akira Takahashi
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section:single single]

[heading Prototype]

``
template <class T>
iterator_range<const T*> single(const T& x);

template <class T>
iterator_range<T*> single(T& x);
``

[heading Description]

`single` makes a __random_access_range__ which delivers a range presentation of one object.

[heading Returned Range Category]
__random_access_range__

[heading Example]

``
#include <iostream>
#include <boost/range/single.hpp>
#include <boost/range/algorithm/for_each.hpp>

void disp(int x) { std::cout << x << std::endl; }

int main()
{
    boost::for_each(boost::single(3), disp);
}
``

This would produce the output:
``
3
``

[endsect]
