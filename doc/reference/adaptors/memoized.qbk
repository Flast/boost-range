[/
    Copyright 2011 Akira Takahashi
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section:memoized memoized]

`memoized` returns a range whose values are cached for speed, preparing for repeated dereferences.

[table
    [[Syntax] [Code]]
    [[Pipe] [`rng | boost::adaptors::memoized`]]
    [[Function] [`boost::adaptors::memoize(rng)`]]
]

* [*Precondition:] Range is Readable. range_value<Range>::type is Assignable.
* [*Range Category:] __single_pass_range__
* [*Range Return Type:] boost::memoized_range<Range>
* [*Returned Range Category:] __forward_range__

[section:memoized_example memoized example]
[import ../../../test/adaptor_test/memoized_example.cpp]
[memoized_example]
[endsect]

This would produce the output:
``
add function : 1
2
add function : 2
3
add function : 3
4
``

If do not use `memoized`, `add` functor called twice.


[endsect]

