[/
    Copyright 2011 Akira Takahashi
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]
[section:taken_while taken_while]

`taken_while`, applied to a predicate and the base range, returns the longest prefix (possibly empty) of the range of elements that satisfy the predicate.

[table
    [[Syntax] [Code]]
    [[Pipe] [`rng | boost::adaptors::taken_while(pred)`]]
    [[Regular Operator] [`rng |+ boost::adaptors::taken_while(pred)`]]
    [[Function] [`boost::adaptors::take_while(rng, pred)`]]
]

* [*Precondition:] pred shall not modify referents.
* [*Range Category:] __single_pass_range__
* [*Range Return Type:] boost::taken_while_range<Range>
* [*Returned Range Category:] The minimum of the range category of `rng` and __bidirectional_range__

[section:taken_while_example taken_while example]
[import ../../../test/adaptor_test/taken_while_example.cpp]
[taken_while_example]
[endsect]

This would produce the output:
``
2 4 6 
``

[endsect]

